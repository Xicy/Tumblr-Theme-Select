<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:conv="clr-namespace:Xceed.Wpf.Toolkit.Core.Converters;assembly=Xceed.Wpf.Toolkit"
                    xmlns:tumblrThemeSelect="clr-namespace:TumblrThemeSelect"
                    mc:Ignorable="d" x:Class="TumblrThemeSelect.Theme.Tumblr">

    <conv:ColorToSolidColorBrushConverter x:Key="ColorToSolidColorBrushConverter" />

    <SolidColorBrush x:Key="ColorBackground" Color="#FF33393E"/>
    <SolidColorBrush x:Key="ColorHeader" Color="#FF3D4348"/>
    <SolidColorBrush x:Key="ColorButtonGreen" Color="#FF51CC9E"/>
    <SolidColorBrush x:Key="ColorButtonGrey" Color="#FF6A6E72"/>
    <SolidColorBrush x:Key="ColorButtonBlue" Color="#FF519ECC"/>
    <LinearGradientBrush x:Key="ColorCircleLoading" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
        <GradientStop Color="#FF51CC9E" Offset="0"/>
        <GradientStop Color="#FF519ECC" Offset="1"/>
    </LinearGradientBrush>

    <Style TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Padding" Value="7,5"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" Margin="0" CornerRadius="4" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter
								ContentTemplate="{TemplateBinding ContentTemplate}"
								Content="{TemplateBinding Content}"
								ContentStringFormat="{TemplateBinding ContentStringFormat}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								Margin="{TemplateBinding Padding}"
								RecognizesAccessKey="True"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <Border x:Name="Glass" CornerRadius="4" SnapsToDevicePixels="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Glass" Value="#20FFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" TargetName="Glass" Value="#20FFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="Glass" Value="#20000000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="SelectionBrush" Value="#FFFFFF"/>
        <Setter Property="Foreground" Value="#80FFFFFF"/>
        <Setter Property="Background" Value="#33000000"/>
        <Setter Property="CaretBrush" Value="#FFFFFF"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#80FFFFFF"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    </Style>
    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="SelectionBrush" Value="#FFFFFF"/>
        <Setter Property="Foreground" Value="#80FFFFFF"/>
        <Setter Property="Background" Value="#33000000"/>
        <Setter Property="CaretBrush" Value="#FFFFFF"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#80FFFFFF"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    </Style>
    <Style x:Key="ThemeItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <StackPanel SnapsToDevicePixels="true" Height="220" Width="260">
                        <Grid Height="173" Width="260">
                            <Border CornerRadius="4">
                                <Border.Background>
                                    <ImageBrush ImageSource="{Binding ImageSource, Mode=OneTime}"/>
                                </Border.Background>
                            </Border>
                            <Border x:Name="Glass" Visibility="Collapsed" BorderThickness="3" BorderBrush="#80FFFFFF" CornerRadius="4" Background="#30000000"/>
                        </Grid>
                        <StackPanel VerticalAlignment="Bottom" Orientation="Horizontal" HorizontalAlignment="Center">
                            <TextBlock Foreground="#FFFFFFFF" FontFamily="Arial" FontSize="13" Text="{Binding Title}" FontWeight="Bold" Margin="0,0,3,0"/>
                            <TextBlock Foreground="#66FFFFFF" FontFamily="Arial" FontSize="13" Text="by"/>
                            <TextBlock Foreground="#66FFFFFF" FontFamily="Arial" FontSize="13" Text="{Binding AuthorName}" Margin="3,0,0,0" />
                        </StackPanel>
                    </StackPanel>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="Glass" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Visibility" TargetName="Glass" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Foreground" Value="#8C8C8C"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot" Width="8" Background="{TemplateBinding Background}">
                        <Track x:Name="PART_Track" IsDirectionReversed="true" Focusable="false">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}">
                                    <Thumb.Style>
                                        <Style TargetType="{x:Type Thumb}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                        <Grid x:Name="Grid">
                                                            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent"/>
                                                            <Border x:Name="Rectangle1" CornerRadius="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Background="{TemplateBinding Background}"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="Tag" Value="Horizontal">
                                                                <Setter TargetName="Rectangle1" Property="Width" Value="Auto"/>
                                                                <Setter TargetName="Rectangle1" Property="Height" Value="7"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false"/>
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false"/>
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" Value="Auto"/>
                            <Setter Property="Height" Value="8"/>
                            <Setter TargetName="Thumb" Property="Tag" Value="Horizontal"/>
                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand"/>
                            <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="TextElement.Foreground" Value="White"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton" 
							ClickMode="Press" Focusable="False"
							IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Background="{TemplateBinding Background}" BorderBrush="{x:Null}" Foreground="{TemplateBinding Foreground}">
                            <ToggleButton.Template>

                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="20" />
                                        </Grid.ColumnDefinitions>
                                        <Border Grid.ColumnSpan="2" x:Name="Border" 
											CornerRadius="4" BorderThickness="0" 
											Background="{TemplateBinding Background}" />
                                        <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="{x:Null}" x:Name="ButtonBorder"
											CornerRadius="4" BorderThickness="0, 0, 0, 0" />

                                        <Path x:Name="Arrow" Grid.Column="1" 
											Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
											HorizontalAlignment="Center"
											VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="#33FFFFFF"/>
                                        </Trigger>
                                        <Trigger Property="IsFocused" Value="True">
                                            <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="#33FFFFFF"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>

                            </ToggleButton.Template>
                        </ToggleButton>

                        <ContentPresenter x:Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
							HorizontalAlignment="Left" VerticalAlignment="Center"                              
							Content="{TemplateBinding SelectionBoxItem}" 
							ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
							ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>

                        <Popup x:Name="Popup" Placement="Bottom"
							Focusable="False" AllowsTransparency="True"
							IsOpen="{TemplateBinding IsDropDownOpen}"
							PopupAnimation="Slide">
                            <Grid x:Name="DropDown" SnapsToDevicePixels="True"
								MinWidth="{TemplateBinding ActualWidth}"
								MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Margin="0, 1, 0, 0"
									CornerRadius="4" BorderThickness="0" Background="{TemplateBinding BorderBrush}"/>
                                <ScrollViewer Margin="4" SnapsToDevicePixels="True" Foreground="{TemplateBinding Foreground}">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="MinHeight" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                            <Setter Property="Visibility" TargetName="ContentSite" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Background" Value="#33000000"/>
        <Setter Property="BorderBrush" Value="#D8000000"/>
    </Style>
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="False" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="#00000000" />
        <Setter Property="BorderBrush" Value="#70FFFFFF" />
        <Setter Property="Foreground" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="{x:Null}">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border"
								Width="15"
								Height="15"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="1"
								ClipToBounds="True">
                                <Path x:Name="CheckMark"
									Width="8"
									Height="8"
									HorizontalAlignment="Center"
									VerticalAlignment="Center"
									Data="F1M0.468732,4.66838L3.03345,7.95443 7.28127,0.420569"
									Stretch="Fill"
									Stroke="{TemplateBinding BorderBrush}"
									StrokeEndLineCap="Round"
									StrokeStartLineCap="Round"
									StrokeThickness="2" />
                            </Border>
                        </BulletDecorator.Bullet>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" Value="#d8FFFFFF" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" Value="#d8FFFFFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ToolTip}" >
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Placement" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}" >
                    <Border Background="#D8000000" CornerRadius="4" Padding="5" >
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type xctk:ColorPicker}">
        <Setter Property="Background" Value="#33FFFFFF" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xctk:ColorPicker}">
                    <Grid>
                        <CheckBox x:Name="PART_ColorPickerToggleButton" IsChecked="{Binding IsOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsTabStop="True" Background="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorToSolidColorBrushConverter}}">
                            <CheckBox.Template>
                                <ControlTemplate TargetType="{x:Type CheckBox}">
                                    <BulletDecorator Background="{x:Null}">
                                        <Grid>
                                            <Border Background="{TemplateBinding Background}" CornerRadius="4" SnapsToDevicePixels="True"/>
                                            <Border x:Name="Chrome" CornerRadius="4" SnapsToDevicePixels="True"/>
                                        </Grid>
                                    </BulletDecorator>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" TargetName="Chrome" Value="#20FFFFFF"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" TargetName="Chrome" Value="#20000000"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </CheckBox.Template>
                        </CheckBox>
                        <Popup x:Name="PART_ColorPickerPalettePopup" IsOpen="{Binding ElementName=PART_ColorPickerToggleButton, Path=IsChecked}" VerticalAlignment="Bottom" StaysOpen="False" AllowsTransparency="True"  Focusable="False" HorizontalOffset="1" VerticalOffset="1" PopupAnimation="Slide">
                            <Border x:Name="_colorCanvasHost" BorderThickness="0" Background="#80000000" Padding="3" CornerRadius="4">
                                <xctk:ColorCanvas x:Name="PART_ColorCanvas" Background="{x:Null}" BorderThickness="0" SelectedColor="{Binding SelectedColor, RelativeSource={RelativeSource AncestorType={x:Type xctk:ColorPicker}, Mode=FindAncestor}}" Foreground="White" BorderBrush="{x:Null}">
                                    <xctk:ColorCanvas.Template>
                                        <ControlTemplate TargetType="{x:Type xctk:ColorCanvas}">
                                            <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Padding="5" CornerRadius="4">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Canvas x:Name="PART_ColorShadingCanvas" Height="100" Width="100">
                                                        <Rectangle x:Name="ColorShadingRectangle" Height="{Binding Height, ElementName=PART_ColorShadingCanvas}" Width="{Binding Width, ElementName=PART_ColorShadingCanvas}">
                                                            <Rectangle.Fill>
                                                                <Binding ElementName="PART_SpectrumSlider" Path="SelectedColor">
                                                                    <Binding.Converter>
                                                                        <xctk:ColorToSolidColorBrushConverter/>
                                                                    </Binding.Converter>
                                                                </Binding>
                                                            </Rectangle.Fill>
                                                        </Rectangle>
                                                        <Rectangle x:Name="WhiteGradient" Height="{Binding Height, ElementName=PART_ColorShadingCanvas}" Width="{Binding Width, ElementName=PART_ColorShadingCanvas}">
                                                            <Rectangle.Fill>
                                                                <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                                                    <GradientStop Color="White" Offset="0"/>
                                                                    <GradientStop Color="Transparent" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Rectangle.Fill>
                                                        </Rectangle>
                                                        <Rectangle x:Name="BlackGradient" Height="{Binding Height, ElementName=PART_ColorShadingCanvas}" Width="{Binding Width, ElementName=PART_ColorShadingCanvas}">
                                                            <Rectangle.Fill>
                                                                <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                                                                    <GradientStop Color="Black" Offset="0"/>
                                                                    <GradientStop Color="#00000000" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Rectangle.Fill>
                                                        </Rectangle>
                                                        <Canvas x:Name="PART_ColorShadeSelector" Height="10" IsHitTestVisible="False" Width="10">
                                                            <Ellipse Height="10" IsHitTestVisible="False" Stroke="White" StrokeThickness="3" Width="10"/>
                                                            <Ellipse Height="10" IsHitTestVisible="False" Stroke="Black" StrokeThickness="1" Width="10"/>
                                                        </Canvas>
                                                    </Canvas>
                                                    <xctk:ColorSpectrumSlider x:Name="PART_SpectrumSlider" Grid.Column="1" ClipToBounds="False" Margin="4,-8,0,0" VerticalAlignment="Stretch" BorderThickness="0"/>
                                                </Grid>
                                            </Border>
                                        </ControlTemplate>
                                    </xctk:ColorCanvas.Template>
                                </xctk:ColorCanvas>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#33000000"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
    </Style>

    <Style x:Key="WindowButton" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="2,0,0,0"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent">
                        <TextBlock x:Name="ButtonContent" FontSize="13" FontFamily="Webdings" Text="{TemplateBinding Content}" HorizontalAlignment="Center"  VerticalAlignment="Center" Foreground="#60FFFFFF"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" TargetName="ButtonContent" Value="#90FFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" TargetName="ButtonContent" Value="#80000000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="WindowsTemplate"  TargetType="{x:Type tumblrThemeSelect:MainWindow}">
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <EventSetter Event="Loaded" Handler="Window_Loaded"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border Background="{DynamicResource ColorHeader}" CornerRadius="4" Padding="1">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="34px"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0" Background="{DynamicResource ColorHeader}" MouseLeftButtonDown="Window_DragMove" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="0" Source="{TemplateBinding Icon}" Margin="3,1,0,1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                <TextBlock Grid.Column="1" Text="{TemplateBinding Title}" FontSize="14" FontFamily="Arial" Foreground="White" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                <StackPanel Grid.Column="2" Margin="0,0,2,0" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                                    <Button Style="{DynamicResource WindowButton}" Content="0" Click="Window_Minimize"/>
                                    <Button Style="{DynamicResource WindowButton}" Content="r" Click="Window_Close"/>
                                </StackPanel>
                            </Grid>
                            <AdornerDecorator Grid.Row="1">
                                <ContentPresenter/>
                            </AdornerDecorator>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>